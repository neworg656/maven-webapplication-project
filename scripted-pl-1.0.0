node
{
    echo "git branh name: ${env.BRANCH_NAME}"
    echo "Build number is: ${env.BUILD_NUMBER}"
    echo "node name is: ${env.NODE_NAME}"
    
    def  mavenHome=tool name: "mave-3.9.9"
     try
    {
        notifyBuild('STARTED')
        stage ('git checkout')
        {
            git branch: 'development', url: 'https://github.com/neworg656/maven-webapplication-project.git'
        }
        stage ('compile')
        {
            sh "${mavenHome}/bin/mvn clean compile"
        }
        stage ('Build')
        {
            sh "${mavenHome}/bin/mvn clean package"
        }
        stage('sq report')
        {
            sh "${mavenHome}/bin/mvn sonar:sonar"
        }
        stage ('upload nexus')
        {
            sh "${mavenHome}/bin/mvn clean deploy"
        }
        stage ('deploy into topmcat')
        {
              sh """

      curl -u tomcat:1234 \
       --upload-file /var/lib/jenkins/workspace/scripted-slack-pl/target/maven-web-application.war \
        "http://13.127.45.114:8080/manager/text/deploy?path=/maven-web-application&update=true"
          
        """
        }
    }
     catch (e) {
   
       currentBuild.result = "FAILED"

  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
        
} 

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#jio-devteam')

}
